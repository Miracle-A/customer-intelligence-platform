name: Build & Deploy to Cloud Run

on:
  push:
    branches: [ "main" ]   # Runs when you push to main branch
  workflow_dispatch:        # Allows manual trigger

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    env:
      PROJECT_ID: ${{ secrets.GCP_PROJECT }}
      REGION: ${{ secrets.GCP_REGION }}
      REPO: ${{ secrets.AR_REPO }}
      SERVICE: ${{ secrets.SERVICE_NAME }}
      SHA: ${{ github.sha }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT }}
          export_default_credentials: true

      - name: Auth to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Authenticate Docker to Artifact Registry
        run: gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev --quiet

      - name: Show resolved image variables (debug)
        run: |
          echo "REGION=${{ env.REGION }}"
          echo "PROJECT_ID=${{ env.PROJECT_ID }}"
          echo "REPO=${{ env.REPO }}"
          echo "SERVICE=${{ env.SERVICE }}"
          echo "SHA=${{ env.SHA }}"
          echo "REMOTE_IMAGE=${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO }}/${{ env.SERVICE }}:${{ env.SHA }}"

      - name: Build Docker image (local tag)
        run: docker build -t "${{ env.SERVICE }}:${{ env.SHA }}" .

      - name: Tag for Artifact Registry
        run: |
          docker tag "${{ env.SERVICE }}:${{ env.SHA }}" \
            "${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO }}/${{ env.SERVICE }}:${{ env.SHA }}"

      - name: Push Docker image
        run: docker push "${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO }}/${{ env.SERVICE }}:${{ env.SHA }}"

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy "${{ env.SERVICE }}" \
            --image "${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO }}/${{ env.SERVICE }}:${{ env.SHA }}" \
            --region "${{ env.REGION }}" \
            --platform managed \
            --allow-unauthenticated \
            --port 8501
